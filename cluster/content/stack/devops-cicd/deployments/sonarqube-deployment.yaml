apiVersion: apps/v1
kind: Deployment
metadata:
  name: sonar
  namespace: devops-cicd    
spec:
  selector:
    matchLabels:
      app: sonar
      workload: cicd
  replicas: 1
  template: 
    metadata:
      labels:
        app: sonar
        workload: cicd
      namespace: devops-cicd          
    spec:
      containers:
      # For depends on you can either use helm chart
      # or just specify the db container here
      - name: sonar
        image: sonarqube:7.6-community
        env:
        - name: USER_LOGIN
          valueFrom:
             secretKeyRef:
                name: sonarqube-secret
                key: user-login
        - name: USER_NAME
          valueFrom:
             secretKeyRef:
                name: sonarqube-secret
                key: user-name
        - name: USER_PASSWORD
          valueFrom:
             secretKeyRef:
                name: sonarqube-secret
                key: user-password              
        volumeMounts:
        - name: sonar-data-persistent-storage
          mountPath: /opt/sonarqube/data
        - name: sonar-ext-persistent-storage
          mountPath: /opt/sonarqube/extensions
        - name: sonar-logs-persistent-storage
          mountPath: /opt/sonarqube/logs
      volumes:
      - name: sonar-data-persistent-storage
        persistentVolumeClaim:
          claimName: sonar-data-pv-claim       
      - name: sonar-ext-persistent-storage
        persistentVolumeClaim:
          claimName: sonar-ext-pv-claim    
      - name: sonar-logs-persistent-storage
        persistentVolumeClaim:
          claimName: sonar-logs-pv-claim                               
      restartPolicy: Always       
---
apiVersion: v1
kind: Service
metadata:
  name: sonar-service
  namespace: devops-cicd  
spec:
  selector:
    app: sonar
    workload: cicd
  ports:
    - name: http
      port: 9000
      nodePort: 30083
  type: NodePort