# Download Kubectl binaries
FROM alpine AS kubectl-kind
ARG ARCH=amd64

WORKDIR /usr/local/bin
# Download Kubernetes release
ARG KUBERNETES_RELEASE=v1.23.3
RUN wget https://storage.googleapis.com/kubernetes-release/release/${KUBERNETES_RELEASE}/bin/linux/${ARCH}/kubectl -O kubectl\
    && chmod +x kubectl

# Download Kind release
# https://github.com/kubernetes-sigs/kind/releases 
ARG KIND_RELEASE=v0.11.1
RUN wget https://github.com/kubernetes-sigs/kind/releases/download/${KIND_RELEASE}/kind-linux-${ARCH} -O kind \
    && chmod +x kind


# Final docker dind (alpine) image content
FROM jenkins/jenkins:lts as runtime 
# Copy kind binaries
COPY --from=kubectl-kind /usr/local/bin/kind /bin/kind
# Copy kubectl binaries
COPY --from=kubectl-kind /usr/local/bin/kubectl /bin/kubectl
# Copy necessary directories
COPY /content /content




USER root

# # Install init plugins
# RUN jenkins-plugin-cli --plugins docker-workflow:1.27 cloudbees-folder:6.17 timestamper:1.17 \
# ws-cleanup:0.40 pipeline-stage-view:2.21 pam-auth:1.7 pipeline-github-lib:36.v4c01db_ca_ed16 \
# matrix-auth:3.0.1 ssh:2.6.1 build-timeout:1.20 github-branch-source:2.11.4  ssh-slaves:1.33.0 \
# email-ext:2.87 antisamy-markup-formatter:2.7 workflow-aggregator:2.6 git:4.10.3 ldap:2.7 authorize-project

# Install init plugins
RUN jenkins-plugin-cli --plugins docker-workflow cloudbees-folder timestamper \
ws-cleanup pipeline-stage-view pam-auth pipeline-github-lib \
matrix-auth ssh build-timeout github-branch-source  ssh-slaves \
email-ext antisamy-markup-formatter workflow-aggregator git ldap authorize-project

# install wget
RUN apt-get update && apt-get install -y wget curl

# Download maven binaries
ARG MAVEN_V
RUN wget --no-verbose -O /tmp/apache-maven-$MAVEN_V-bin.tar.gz http://apache.cs.utah.edu/maven/maven-3/$MAVEN_V/binaries/apache-maven-$MAVEN_V-bin.tar.gz
# install maven
RUN tar xzf /tmp/apache-maven-$MAVEN_V-bin.tar.gz -C /opt/ \
    && ln -s /opt/apache-maven-$MAVEN_V /opt/maven \
    && ln -s /opt/maven/bin/mvn /usr/local/bin \
    && rm -f /tmp/apache-maven-$MAVEN_V-bin.tar.gz
RUN chown -R jenkins:jenkins /opt/maven
# Setup maven home
ENV MAVEN_HOME /opt/maven

# Remove Cache
RUN rm -rf /var/cache/apt/*

CMD [ "sh","-c","/usr/local/bin/jenkins.sh && sh"]

# Skip install plugins wizard
ENV JAVA_OPTS -Djenkins.install.runSetupWizard=false

# JAVA mem heap size
#ENV JAVA_OPTS -Xmx2048m -Djava.awt.headless=true

# Copy jenkins init scripts
COPY /jenkins-scripts/ /usr/share/jenkins/ref/init.groovy.d/


# Removing startup variables for security
#CMD [ "env -u JENKINS_USER && env -u JENKINS_PASS && env -u DOCKER_USER && env -u DOCKER_PASS && env -u JENKINS_PORT" ]

VOLUME /var/jenkins_home



# To use host unix docker socket we need root
# USER jenkins